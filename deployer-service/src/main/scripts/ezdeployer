#!/bin/bash
### BEGIN INIT INFO
# Provides:          EzDeployer
# Required-Start:    networking
# Required-Stop:     networking
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: EzDeployer Thrift service
# Description:       EzDeployer Thrift service
### END INIT INFO

# Source function library.
. /etc/init.d/functions

export EZBAKE_ENCRYPTION_SECRET=$(runuser ezdeployer -l sh -c 'echo ${EZBAKE_ENCRYPTION_SECRET}')
export EZCONFIGURATION_DIR=${EZCONFIGURATION_DIR:=/etc/sysconfig/ezbake}

SERVICE_NAME=ezdeployer
RETVAL=0
LOCKFILE=/var/lock/subsys/${SERVICE_NAME}
PIDFILE=/opt/ezdeployer/bin/${SERVICE_NAME}.pid

EZ_PREFIX=/opt/ezdeployer
EZ_USER=ezdeployer

SERVICE_ID=_Ez_Deployer
SERVICE_CLASS=ezbake.deployer.EzBakeDeployerHandler
SSL_DIR=/opt/ezdeployer/etc/ezbake/pki

THRIFT_RUNNER_JAR="/opt/ezbake/thriftrunner/bin/thriftrunner.jar"
THRIFT_RUNNER_OPTS="-j ${EZ_PREFIX}/bin/ezdeployer.jar \
	  --host_name ${HOSTNAME} \
	  -P /opt/ezdeployer/etc \
          -c ${SERVICE_CLASS} -x ${SERVICE_ID} \
	      -p 30000:34999 -s ${SERVICE_NAME} \
              -D ezbake.shared.secret.environment.variable=EZBAKE_ENCRYPTION_SECRET \
	      -D ezbake.security.app.id=${SERVICE_ID} \
	      -D openshift.timeout=600000 \
	      -D ezbake.security.ssl.dir=${SSL_DIR}"


JAVA_OPTS="-Xmx2g -jar ${THRIFT_RUNNER_JAR}"

start() {
	echo -n "Starting ${SERVICE_NAME}: "

	daemon --user $EZ_USER --pidfile ${PIDFILE} "java ${JAVA_OPTS} ${THRIFT_RUNNER_OPTS} &>/dev/null & echo \$! > ${PIDFILE}"
	RETVAL=$?
	[ $RETVAL -eq 0 ] && touch $LOCKFILE

	echo
	start_logstash
	return $RETVAL
}

stop() {
	echo -n "Shutting down ${SERVICE_NAME}: "
	kill $(<${PIDFILE}) && success || failure
	RETVAL=$?
	rm -f $PIDFILE
	rm -f $LOCKFILE
	echo
	stop_logstash
	return $RETVAL
}

LOGSTASH_HELPER=/opt/ezbake/ezbake-logstash-helper/logstash.sh
function start_logstash() {
    if [ -f "${LOGSTASH_HELPER}" ]; then
	runuser ${EZ_USER} <<-END
	source "${LOGSTASH_HELPER}"
	start_logstash common_services "${SERVICE_NAME}" "${EZ_PREFIX}/logstash"
	END
    fi
}

function stop_logstash() {
    if [ -f "${LOGSTASH_HELPER}" ]; then
	runuser ${EZ_USER} <<-END
	source "${LOGSTASH_HELPER}"
	stop_logstash common_services "${SERVICE_NAME}" "${EZ_PREFIX}/logstash"
	END
    fi
}

case "$1" in
    start)
	start
	;;
    stop)
	stop
	;;
    status)
	echo -n "Status of ${SERVICE_NAME}: "
	PID=`cat "$PIDFILE"`
	if [ -f "$PIDFILE" -a -d "/proc/${PID}" ]; then
		echo -n "running"
		RETVAL=0
	elif [ -f "$LOCKFILE" ]; then
		echo -n "dead"
		RETVAL=2
	else
		echo -n "dead"
		RETVAL=3
	fi
	echo
	;;
    restart)
    	stop
	start
	;;
    reload)
	#<cause the service configuration to be reread, either with
	#kill -HUP or by restarting the daemons, in a manner similar
	#to restart above>
	;;
    *)
	echo "Usage: ${SERVICE_NAME} {start|stop|status|reload|restart}"
	exit 1
	;;
esac
exit $RETVAL


